{"version":3,"sources":["webpack:///./node_modules/uuid/index.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./src/views/dashboard/g2/point.vue?d48d","webpack:///src/views/dashboard/g2/point.vue","webpack:///./src/views/dashboard/g2/point.vue?b346","webpack:///./src/views/dashboard/g2/point.vue","webpack:///./node_modules/uuid/v1.js","webpack:///./node_modules/uuid/v4.js","webpack:///./node_modules/uuid/lib/rng-browser.js"],"names":["v1","__webpack_require__","v4","uuid","module","exports","byteToHex","i","toString","substr","bytesToUuid","buf","offset","bth","join","render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticRenderFns","pointvue_type_script_lang_js_","data","uuid_default","mounted","_this","$nextTick","renderChart","methods","_G","external_G2_default","a","Global","colorMap","Asia","colors","Americas","Europe","Oceania","continent","Country","LifeExpectancy","GDP","Population","chart","Chart","container","forceFit","height","source","scale","alias","type","axis","label","formatter","value","toFixed","tooltip","showTitle","legend","point","position","size","color","val","shape","style","lineWidth","strokeOpacity","fillOpacity","opacity","stroke","g2_pointvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","_nodeId","_clockseq","rng","_lastMSecs","_lastNSecs","options","b","node","clockseq","undefined","seedBytes","msecs","Date","getTime","nsecs","dt","Error","tl","tmh","n","Array","rnds","random","ii","getRandomValues","crypto","bind","window","msCrypto","rnds8","Uint8Array","r","Math"],"mappings":"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","file":"static/js/chunk-61ba1ef3.74cfec8e.js","sourcesContent":["var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":_vm.id}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div :id=\"id\"></div>\r\n</template>\r\n\r\n<script>\r\nimport uuid from 'uuid'\r\nimport G2 from '@antv/g2'\r\nexport default {\r\n  data () {\r\n    return {\r\n      id: 'uuid' + uuid()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.$nextTick(() => {\r\n      this.renderChart()\r\n    })\r\n  },\r\n  methods: {\r\n    renderChart () {\r\n      var _G = G2\r\n      var Global = _G.Global\r\n\r\n      var colorMap = {\r\n        'Asia': Global.colors[0],\r\n        'Americas': Global.colors[1],\r\n        'Europe': Global.colors[2],\r\n        'Oceania': Global.colors[3]\r\n      }\r\n      let data = [{ 'continent': 'Americas', 'Country': 'Argentina', 'LifeExpectancy': 75.32, 'GDP': 12779.37964, 'Population': 40301927 }, { 'continent': 'Americas', 'Country': 'Brazil', 'LifeExpectancy': 72.39, 'GDP': 9065.800825, 'Population': 190010647 }, { 'continent': 'Americas', 'Country': 'Canada', 'LifeExpectancy': 80.653, 'GDP': 36319.23501, 'Population': 33390141 }, { 'continent': 'Americas', 'Country': 'Chile', 'LifeExpectancy': 78.553, 'GDP': 13171.63885, 'Population': 16284741 }, { 'continent': 'Americas', 'Country': 'Colombia', 'LifeExpectancy': 72.889, 'GDP': 7006.580419, 'Population': 44227550 }, { 'continent': 'Americas', 'Country': 'Costa Rica', 'LifeExpectancy': 78.782, 'GDP': 9645.06142, 'Population': 4133884 }, { 'continent': 'Americas', 'Country': 'Cuba', 'LifeExpectancy': 78.273, 'GDP': 8948.102923, 'Population': 11416987 }, { 'continent': 'Americas', 'Country': 'Dominican Republic', 'LifeExpectancy': 72.235, 'GDP': 6025.374752, 'Population': 9319622 }, { 'continent': 'Americas', 'Country': 'Ecuador', 'LifeExpectancy': 74.994, 'GDP': 6873.262326, 'Population': 13755680 }, { 'continent': 'Americas', 'Country': 'El Salvador', 'LifeExpectancy': 71.878, 'GDP': 5728.353514, 'Population': 6939688 }, { 'continent': 'Americas', 'Country': 'Guatemala', 'LifeExpectancy': 70.259, 'GDP': 5186.050003, 'Population': 12572928 }, { 'continent': 'Americas', 'Country': 'Honduras', 'LifeExpectancy': 70.198, 'GDP': 3548.330846, 'Population': 7483763 }, { 'continent': 'Americas', 'Country': 'Jamaica', 'LifeExpectancy': 72.567, 'GDP': 7320.880262, 'Population': 2780132 }, { 'continent': 'Americas', 'Country': 'Mexico', 'LifeExpectancy': 76.195, 'GDP': 11977.57496, 'Population': 108700891 }, { 'continent': 'Americas', 'Country': 'Nicaragua', 'LifeExpectancy': 72.899, 'GDP': 2749.320965, 'Population': 5675356 }, { 'continent': 'Americas', 'Country': 'Panama', 'LifeExpectancy': 75.537, 'GDP': 9809.185636, 'Population': 3242173 }, { 'continent': 'Americas', 'Country': 'Paraguay', 'LifeExpectancy': 71.752, 'GDP': 4172.838464, 'Population': 6667147 }, { 'continent': 'Americas', 'Country': 'Peru', 'LifeExpectancy': 71.421, 'GDP': 7408.905561, 'Population': 28674757 }, { 'continent': 'Americas', 'Country': 'Puerto Rico', 'LifeExpectancy': 78.746, 'GDP': 19328.70901, 'Population': 3942491 }, { 'continent': 'Americas', 'Country': 'Trinidad and Tobago', 'LifeExpectancy': 69.819, 'GDP': 18008.50924, 'Population': 1056608 }, { 'continent': 'Americas', 'Country': 'United States', 'LifeExpectancy': 78.242, 'GDP': 42951.65309, 'Population': 301139947 }, { 'continent': 'Americas', 'Country': 'Uruguay', 'LifeExpectancy': 76.384, 'GDP': 10611.46299, 'Population': 3447496 }, { 'continent': 'Americas', 'Country': 'Venezuela', 'LifeExpectancy': 73.747, 'GDP': 11415.80569, 'Population': 26084662 }, { 'continent': 'Asia', 'Country': 'China', 'LifeExpectancy': 72.961, 'GDP': 4959.114854, 'Population': 1318683096 }, { 'continent': 'Asia', 'Country': 'Hong Kong, China', 'LifeExpectancy': 82.208, 'GDP': 39724.97867, 'Population': 6980412 }, { 'continent': 'Asia', 'Country': 'Japan', 'LifeExpectancy': 82.603, 'GDP': 31656.06806, 'Population': 127467972 }, { 'continent': 'Asia', 'Country': 'Korea, Dem. Rep.', 'LifeExpectancy': 67.297, 'GDP': 1593.06548, 'Population': 23301725 }, { 'continent': 'Asia', 'Country': 'Korea, Rep.', 'LifeExpectancy': 78.623, 'GDP': 23348.13973, 'Population': 49044790 }, { 'continent': 'Europe', 'Country': 'Albania', 'LifeExpectancy': 76.423, 'GDP': 5937.029526, 'Population': 3600523 }, { 'continent': 'Europe', 'Country': 'Austria', 'LifeExpectancy': 79.829, 'GDP': 36126.4927, 'Population': 8199783 }, { 'continent': 'Europe', 'Country': 'Belgium', 'LifeExpectancy': 79.441, 'GDP': 33692.60508, 'Population': 10392226 }, { 'continent': 'Europe', 'Country': 'Bosnia and Herzegovina', 'LifeExpectancy': 74.852, 'GDP': 7446.298803, 'Population': 4552198 }, { 'continent': 'Europe', 'Country': 'Bulgaria', 'LifeExpectancy': 73.005, 'GDP': 10680.79282, 'Population': 7322858 }, { 'continent': 'Europe', 'Country': 'Croatia', 'LifeExpectancy': 75.748, 'GDP': 14619.22272, 'Population': 4493312 }, { 'continent': 'Europe', 'Country': 'Czech Republic', 'LifeExpectancy': 76.486, 'GDP': 22833.30851, 'Population': 10228744 }, { 'continent': 'Europe', 'Country': 'Denmark', 'LifeExpectancy': 78.332, 'GDP': 35278.41874, 'Population': 5468120 }, { 'continent': 'Europe', 'Country': 'Finland', 'LifeExpectancy': 79.313, 'GDP': 33207.0844, 'Population': 5238460 }, { 'continent': 'Europe', 'Country': 'France', 'LifeExpectancy': 80.657, 'GDP': 30470.0167, 'Population': 61083916 }, { 'continent': 'Europe', 'Country': 'Germany', 'LifeExpectancy': 79.406, 'GDP': 32170.37442, 'Population': 82400996 }, { 'continent': 'Europe', 'Country': 'Greece', 'LifeExpectancy': 79.483, 'GDP': 27538.41188, 'Population': 10706290 }, { 'continent': 'Europe', 'Country': 'Hungary', 'LifeExpectancy': 73.338, 'GDP': 18008.94444, 'Population': 9956108 }, { 'continent': 'Europe', 'Country': 'Iceland', 'LifeExpectancy': 81.757, 'GDP': 36180.78919, 'Population': 301931 }, { 'continent': 'Europe', 'Country': 'Ireland', 'LifeExpectancy': 78.885, 'GDP': 40675.99635, 'Population': 4109086 }, { 'continent': 'Europe', 'Country': 'Italy', 'LifeExpectancy': 80.546, 'GDP': 28569.7197, 'Population': 58147733 }, { 'continent': 'Europe', 'Country': 'Montenegro', 'LifeExpectancy': 74.543, 'GDP': 9253.896111, 'Population': 684736 }, { 'continent': 'Europe', 'Country': 'Netherlands', 'LifeExpectancy': 79.762, 'GDP': 36797.93332, 'Population': 16570613 }, { 'continent': 'Europe', 'Country': 'Norway', 'LifeExpectancy': 80.196, 'GDP': 49357.19017, 'Population': 4627926 }, { 'continent': 'Europe', 'Country': 'Poland', 'LifeExpectancy': 75.563, 'GDP': 15389.92468, 'Population': 38518241 }, { 'continent': 'Europe', 'Country': 'Portugal', 'LifeExpectancy': 78.098, 'GDP': 20509.64777, 'Population': 10642836 }, { 'continent': 'Europe', 'Country': 'Romania', 'LifeExpectancy': 72.476, 'GDP': 10808.47561, 'Population': 22276056 }, { 'continent': 'Europe', 'Country': 'Serbia', 'LifeExpectancy': 74.002, 'GDP': 9786.534714, 'Population': 10150265 }, { 'continent': 'Europe', 'Country': 'Slovak Republic', 'LifeExpectancy': 74.663, 'GDP': 18678.31435, 'Population': 5447502 }, { 'continent': 'Europe', 'Country': 'Slovenia', 'LifeExpectancy': 77.926, 'GDP': 25768.25759, 'Population': 2009245 }, { 'continent': 'Europe', 'Country': 'Spain', 'LifeExpectancy': 80.941, 'GDP': 28821.0637, 'Population': 40448191 }, { 'continent': 'Europe', 'Country': 'Sweden', 'LifeExpectancy': 80.884, 'GDP': 33859.74835, 'Population': 9031088 }, { 'continent': 'Europe', 'Country': 'Switzerland', 'LifeExpectancy': 81.701, 'GDP': 37506.41907, 'Population': 7554661 }, { 'continent': 'Europe', 'Country': 'Turkey', 'LifeExpectancy': 71.777, 'GDP': 8458.276384, 'Population': 71158647 }, { 'continent': 'Europe', 'Country': 'United Kingdom', 'LifeExpectancy': 79.425, 'GDP': 33203.26128, 'Population': 60776238 }, { 'continent': 'Oceania', 'Country': 'Australia', 'LifeExpectancy': 81.235, 'GDP': 34435.36744, 'Population': 20434176 }, { 'continent': 'Oceania', 'Country': 'New Zealand', 'LifeExpectancy': 80.204, 'GDP': 25185.00911, 'Population': 4115771 }]\r\n      var chart = new G2.Chart({\r\n        container: this.id,\r\n        forceFit: true,\r\n        height: 400\r\n      })\r\n      chart.source(data)\r\n      // 为各个字段设置别名\r\n      chart.scale({\r\n        LifeExpectancy: {\r\n          alias: '人均寿命（年）'\r\n        },\r\n        Population: {\r\n          type: 'pow',\r\n          alias: '人口总数'\r\n        },\r\n        GDP: {\r\n          alias: '人均国内生产总值($)'\r\n        },\r\n        Country: {\r\n          alias: '国家/地区'\r\n        }\r\n      })\r\n      chart.axis('GDP', {\r\n        label: {\r\n          formatter: function formatter (value) {\r\n            return (value / 1000).toFixed(0) + 'k'\r\n          } // 格式化坐标轴的显示\r\n        }\r\n      })\r\n      chart.tooltip({\r\n        showTitle: false // 不显示默认标题\r\n      })\r\n      chart.legend('Population', false) // 该图表默认会生成多个图例，设置不展示 Population 和 Country 两个维度的图例\r\n      chart.point().position('GDP*LifeExpectancy').size('Population', [4, 65]).color('continent', function (val) {\r\n        return colorMap[val]\r\n      }).shape('circle').tooltip('Country*Population*GDP*LifeExpectancy').style('continent', {\r\n        lineWidth: 1,\r\n        strokeOpacity: 1,\r\n        fillOpacity: 0.3,\r\n        opacity: 0.65,\r\n        stroke: function stroke (val) {\r\n          return colorMap[val]\r\n        }\r\n      })\r\n      chart.render()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./point.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./point.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./point.vue?vue&type=template&id=522bb488&\"\nimport script from \"./point.vue?vue&type=script&lang=js&\"\nexport * from \"./point.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n"],"sourceRoot":""}